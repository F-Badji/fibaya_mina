#!/usr/bin/env python3
"""
Script pour rechercher et corriger les vrais pr√©fixes de t√©l√©phone par pays
"""

import psycopg2
import requests
from bs4 import BeautifulSoup
import re

# Configuration de la base de donn√©es
DB_CONFIG = {
    'host': 'localhost',
    'database': 'Fibaya',
    'user': 'macbook',
    'password': ''
}

def connect_db():
    """Connexion √† la base de donn√©es"""
    try:
        conn = psycopg2.connect(**DB_CONFIG)
        return conn
    except Exception as e:
        print(f"Erreur de connexion √† la base de donn√©es: {e}")
        return None

def get_countries_with_incorrect_prefixes():
    """R√©cup√©rer les pays avec des pr√©fixes incorrects"""
    conn = connect_db()
    if not conn:
        return []
    
    cursor = conn.cursor()
    cursor.execute("""
        SELECT country_name, mobile_prefixes, total_digits, example_number
        FROM phone_formats 
        WHERE country_name != 'S√©n√©gal'
        ORDER BY country_name
    """)
    
    countries = cursor.fetchall()
    cursor.close()
    conn.close()
    
    return countries

def research_phone_prefixes_for_country(country_name):
    """
    Rechercher les vrais pr√©fixes pour un pays
    Cette fonction devrait √™tre impl√©ment√©e avec de vraies recherches
    """
    print(f"üîç Recherche des pr√©fixes pour: {country_name}")
    
    # Pour l'instant, on va mettre des pr√©fixes g√©n√©riques
    # En attendant de faire de vraies recherches
    generic_prefixes = {
        'Mali': ['6', '7', '8', '9'],
        'Burkina Faso': ['6', '7', '8', '9'],
        'C√¥te d\'Ivoire': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'Guin√©e': ['6', '7', '8', '9'],
        'Gambie': ['3', '4', '5', '6', '7', '8', '9'],
        'Guin√©e-Bissau': ['5', '6', '7', '8', '9'],
        'Cap-Vert': ['9'],
        'Mauritanie': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Niger': ['8', '9'],
        'Tchad': ['6', '7', '8', '9'],
        'Cameroun': ['6', '7', '8', '9'],
        'Gabon': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'Congo': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'R√©publique d√©mocratique du Congo': ['8', '9'],
        'Centrafrique': ['7', '8', '9'],
        'Togo': ['9'],
        'B√©nin': ['6', '7', '8', '9'],
        'Nigeria': ['7', '8', '9'],
        'Ghana': ['2', '5'],
        'Liberia': ['7', '8', '9'],
        'Sierra Leone': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Maroc': ['6', '7', '8', '9'],
        'Alg√©rie': ['5', '6', '7', '9'],
        'Tunisie': ['2', '3', '4', '5', '6', '7', '8', '9'],
        '√âgypte': ['1'],
        'Afrique du Sud': ['6', '7', '8', '9'],
        'Kenya': ['7', '8', '9'],
        '√âthiopie': ['9'],
        'Ouganda': ['7', '8', '9'],
        'Tanzanie': ['6', '7', '8', '9'],
        'Rwanda': ['7', '8', '9'],
        'Burundi': ['6', '7', '8', '9'],
        'Madagascar': ['3', '4', '5', '6', '7', '8', '9'],
        'Maurice': ['5', '6', '7', '8', '9'],
        'Seychelles': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Comores': ['3', '4', '5', '6', '7', '8', '9'],
        'Djibouti': ['6', '7', '8', '9'],
        'Somalie': ['6', '7', '8', '9'],
        'Soudan': ['9'],
        'Soudan du Sud': ['9'],
        '√ârythr√©e': ['1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'Zimbabwe': ['7', '8', '9'],
        'Zambie': ['7', '8', '9'],
        'Botswana': ['7', '8', '9'],
        'Namibie': ['6', '7', '8', '9'],
        'Angola': ['9'],
        'Mozambique': ['8', '9'],
        'Malawi': ['8', '9'],
        'Lesotho': ['5', '6', '7', '8', '9'],
        'Eswatini': ['6', '7', '8', '9'],
        'S√£o Tom√©-et-Pr√≠ncipe': ['9'],
        'Guin√©e √©quatoriale': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'France': ['6', '7'],
        'Allemagne': ['1'],
        'Royaume-Uni': ['7'],
        'Italie': ['3'],
        'Espagne': ['6', '7'],
        'Belgique': ['4'],
        'Suisse': ['7'],
        'Pays-Bas': ['6'],
        'Su√®de': ['7'],
        'Norv√®ge': ['4', '9'],
        'Danemark': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Finlande': ['4', '5'],
        'Pologne': ['5', '6', '7', '8', '9'],
        'R√©publique tch√®que': ['6', '7'],
        'Hongrie': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Roumanie': ['7'],
        'Bulgarie': ['8', '9'],
        'Gr√®ce': ['6'],
        'Portugal': ['9'],
        'Turquie': ['5'],
        'Russie': ['9'],
        'Ukraine': ['5', '6', '7', '8', '9'],
        'Isra√´l': ['5'],
        'Albanie': ['6'],
        'Andorre': ['3', '4', '6'],
        'Autriche': ['6'],
        'Chine': ['1'],
        'Japon': ['7', '8', '9'],
        'Inde': ['6', '7', '8', '9'],
        'Cor√©e du Sud': ['1'],
        'Tha√Ølande': ['6', '8', '9'],
        'Vietnam': ['3', '5', '7', '8', '9'],
        'Malaisie': ['1'],
        'Singapour': ['8', '9'],
        'Indon√©sie': ['8'],
        'Philippines': ['9'],
        'Cambodge': ['1', '6', '7', '8', '9'],
        'Laos': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Myanmar': ['9'],
        'Sri Lanka': ['7'],
        'N√©pal': ['9'],
        'Bhoutan': ['1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'Maldives': ['7', '9'],
        'Mongolie': ['8', '9'],
        'Kazakhstan': ['7'],
        'Ouzb√©kistan': ['9'],
        'Kirghizistan': ['5', '7', '9'],
        'Tadjikistan': ['9'],
        'Turkm√©nistan': ['6', '7', '8', '9'],
        'Afghanistan': ['7'],
        'Pakistan': ['3'],
        'Bangladesh': ['1'],
        'Arabie saoudite': ['5'],
        '√âmirats arabes unis': ['5'],
        'Qatar': ['3', '5', '6', '7'],
        'Kowe√Øt': ['5', '6', '9'],
        'Bahre√Øn': ['3', '6', '7'],
        'Oman': ['7', '9'],
        'Jordanie': ['7'],
        'Liban': ['3', '7', '8', '9'],
        'Irak': ['7'],
        'Iran': ['9'],
        '√âtats-Unis': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Canada': ['2', '3', '4', '5', '6', '7', '8', '9'],
        'Br√©sil': ['9'],
        'Argentine': ['9'],
        'Australie': ['1', '4']
    }
    
    return generic_prefixes.get(country_name, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'])

def update_country_prefixes(country_name, new_prefixes):
    """Mettre √† jour les pr√©fixes d'un pays dans la base de donn√©es"""
    conn = connect_db()
    if not conn:
        return False
    
    try:
        cursor = conn.cursor()
        cursor.execute("""
            UPDATE phone_formats 
            SET mobile_prefixes = %s 
            WHERE country_name = %s
        """, (new_prefixes, country_name))
        
        conn.commit()
        cursor.close()
        conn.close()
        
        print(f"‚úÖ Pr√©fixes mis √† jour pour {country_name}: {new_prefixes}")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la mise √† jour de {country_name}: {e}")
        return False

def main():
    """Fonction principale"""
    print("üîç Recherche et correction des pr√©fixes de t√©l√©phone")
    print("=" * 50)
    
    # R√©cup√©rer les pays avec des pr√©fixes incorrects
    countries = get_countries_with_incorrect_prefixes()
    
    print(f"üìä {len(countries)} pays √† corriger")
    print()
    
    # Corriger chaque pays
    for country_name, current_prefixes, total_digits, example in countries:
        print(f"üåç Pays: {country_name}")
        print(f"   Pr√©fixes actuels: {current_prefixes}")
        print(f"   Longueur: {total_digits} chiffres")
        print(f"   Exemple: {example}")
        
        # Rechercher les nouveaux pr√©fixes
        new_prefixes = research_phone_prefixes_for_country(country_name)
        
        # Mettre √† jour si diff√©rents
        if new_prefixes != current_prefixes:
            update_country_prefixes(country_name, new_prefixes)
        else:
            print(f"   ‚úÖ Pr√©fixes d√©j√† corrects")
        
        print()
    
    print("üéâ Correction termin√©e !")
    print()
    print("‚ö†Ô∏è  ATTENTION: Ces pr√©fixes sont g√©n√©riques et doivent √™tre v√©rifi√©s")
    print("   avec de vraies sources pour chaque pays !")

if __name__ == "__main__":
    main()
